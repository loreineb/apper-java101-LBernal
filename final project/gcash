import java.util.*;

class User {
    String name;
    double balance;

    public User(String name, double balance) {
        this.name = name;
        this.balance = balance;
    }
}

public class Main {
    public static void main(String[] args) {

        Map<String, String> userBalance = new HashMap<>();
        //in a HashMap: keys cannot have duplicates, but value can have
        //Users are saved on a Map being the Mobile number as the key and the User as the value.
        //put existing users into HashMap

        User Bob = new User("Bob", 100);
        userBalance.put("09175861661", Bob);
        userBalance.put("09175861662", "Marley");
        userBalance.put("09175861663","Seth");
        userBalance.put("09175861664", "Ryan");
        userBalance.put("09175861665", "Fritz");

        System.out.println("Welcome to Share-a-Load! Would you like to register as a new user or share to an existing user? Enter 1 to register or 2 to share.");
        Scanner myScanner = new Scanner(System.in);
        String answer = myScanner.next();

        if (answer.equals("1")){ //not answer == "1"
            register(userBalance,myScanner);
            //System.out.println("If you would like to register another user, enter 1. If you would like to send load, enter 2.");
        } else if (answer.equals("2")) {
            shareCheck(userBalance, myScanner);
        } else{
            System.out.println("You did not answer 1 or 2. Have a great day!");
        }
        myScanner.close();
        System.out.println(userBalance);
    }

    public static void register(Map<String, String> userBalance, Scanner myScanner){
        System.out.println("Please enter your name: ");
        String name = myScanner.next();
        boolean checkletter = name.matches("[a-zA-Z]+"); //this is better than doing a for loop

        System.out.println("Please enter your mobile number: ");
        String number = myScanner.next();
        //regarding number's data type: int is too konti, and long, when printed, does not display the 0 at the start of phone numbers
        boolean checknumber = number.matches("\\d+");
        int numlength = number.length();
        //System.out.println(name + " " + number);

        if (checkletter && checknumber && !name.isEmpty() && !number.isEmpty() && numlength == 11){
            if (userBalance.containsKey(number)) {
                System.out.println("This number is already registered.");
            } else {
                userBalance.put(number, name);
                //no need to put checkletter == true kasi by default it's true naman
                //better din to use name.isEmpty() rather than name == null
                System.out.println("Registration successful.");
            }
        } else if (name.isEmpty()){
            System.out.println("You did not enter a name. Registration unsuccessful.");
        } else if (!checkletter) {
            System.out.println("Your input is invalid. Please enter a name consisting of only letters and no special characters. Registration unsuccessful.");
        } else if (number.isEmpty()){
            System.out.println("You did not enter a number. Registration unsuccessful.");
        } else if (!checknumber) {
            System.out.println("Your input is invalid. Please enter a number consisting of only numbers. Registration unsuccessful.");
        } else if (numlength != 11) {
            System.out.println("Your input is invalid. Please enter a number with 11 digits. Registration unsuccessful.");
        }

    }

    public static void shareCheck(Map<String, String> userBalance, Scanner myScanner) {
        System.out.println("Please enter your number: ");
        String sendernum = myScanner.next();
        if (userBalance.containsKey(sendernum)) {
            System.out.println("Please enter the number you want to send to: ");
            String recipientnum = myScanner.next();

            if (userBalance.containsKey(recipientnum) && !recipientnum.equals(sendernum)){
                System.out.println("Please enter how much you want to send: ");

                if (myScanner.hasNextDouble()) {
                    double amount = myScanner.nextDouble();
                    System.out.println(shareALoad.balance());
                } else {
                    System.out.println("Send unsuccessful: The amount you entered is not a valid number. Kindly try again, thank you!");
                }
            } else {
                System.out.println("Send unsuccessful: The number you want to send to is not yet registered or you entered the same number. Kindly try again, thank you!");
            }
        } else {
            System.out.println("Send unsuccessful: Your number is not yet registered. Kindly register and try again, thank you!");
        }
    }
}


interface balance {
    //an interface is a template or an outline for a class
    //everything in the interface has to be in the class
    //@Override keeps track of what you're implementing from the interface

    int balance = 100;
    void shareBalance(); //does not have a body
    void loadBalance(); //does not have a body
}

class shareALoad implements balance {
    public static void main(String[] args) {

        System.out.println(balance);

        shareALoad ex = new shareALoad();
        ex.shareBalance();
        ex.loadBalance();
    }


}
